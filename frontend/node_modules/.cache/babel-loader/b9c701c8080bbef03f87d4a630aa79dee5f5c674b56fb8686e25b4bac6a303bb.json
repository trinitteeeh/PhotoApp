{"ast":null,"code":"var _jsxFileName = \"/Users/trinity/Documents/Project/photobooth/frontend/src/pages/PhotoSession/PhotoSession.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport css from \"./PhotoSession.module.css\"; // Ensure that this path matches your CSS module\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PhotoSession = () => {\n  _s();\n  const [countDown, setCountDown] = useState(5);\n  const videoRef = useRef(null);\n  const canvasRefs = useRef([]);\n  useEffect(() => {\n    if (countDown === 0) return;\n    const intervalId = setInterval(() => {\n      setCountDown(prevCountDown => prevCountDown - 1);\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [countDown]);\n  useEffect(() => {\n    const getUserCamera = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n          try {\n            await videoRef.current.play();\n          } catch (e) {\n            console.error(\"Error playing the video:\", e);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error accessing the camera:\", error);\n      }\n    };\n    getUserCamera();\n\n    // Cleanup function to stop the video stream when the component unmounts\n    return () => {\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n        videoRef.current.srcObject = null;\n      }\n    };\n  }, []);\n  const takePicture = () => {\n    const width = 500; // Define width, height of the photo\n    const height = width / (16 / 9); // Aspect ratio of 16:9\n    const newCanvas = document.createElement(\"canvas\");\n    newCanvas.width = width;\n    newCanvas.height = height;\n    const ctx = newCanvas.getContext(\"2d\");\n    if (ctx && videoRef.current) {\n      ctx.drawImage(videoRef.current, 0, 0, width, height);\n      canvasRefs.current.push(newCanvas); // Store the canvas in the refs array\n    }\n    updateDisplay();\n  };\n  const updateDisplay = () => {\n    const container = document.getElementById(\"canvasContainer\");\n    container.innerHTML = \"\"; // Clear existing canvases displayed\n    canvasRefs.current.forEach(canvas => {\n      container.appendChild(canvas); // Append each canvas to the container\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.container,\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      muted: true,\n      playsInline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: takePicture,\n      children: \"Take Picture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"canvasContainer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(PhotoSession, \"hIkYEeupmlha2N+9B3aDbTxZ0ns=\");\n_c = PhotoSession;\nexport default PhotoSession;\nvar _c;\n$RefreshReg$(_c, \"PhotoSession\");","map":{"version":3,"names":["React","useState","useEffect","useRef","css","jsxDEV","_jsxDEV","PhotoSession","_s","countDown","setCountDown","videoRef","canvasRefs","intervalId","setInterval","prevCountDown","clearInterval","getUserCamera","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","play","e","console","error","tracks","getTracks","forEach","track","stop","takePicture","width","height","newCanvas","document","createElement","ctx","getContext","drawImage","push","updateDisplay","container","getElementById","innerHTML","canvas","appendChild","className","children","ref","autoPlay","muted","playsInline","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","_c","$RefreshReg$"],"sources":["/Users/trinity/Documents/Project/photobooth/frontend/src/pages/PhotoSession/PhotoSession.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport css from \"./PhotoSession.module.css\"; // Ensure that this path matches your CSS module\n\nconst PhotoSession = () => {\n  const [countDown, setCountDown] = useState(5);\n  const videoRef = useRef(null);\n  const canvasRefs = useRef([]);\n\n  useEffect(() => {\n    if (countDown === 0) return;\n    const intervalId = setInterval(() => {\n      setCountDown((prevCountDown) => prevCountDown - 1);\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [countDown]);\n\n  useEffect(() => {\n    const getUserCamera = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n          try {\n            await videoRef.current.play();\n          } catch (e) {\n            console.error(\"Error playing the video:\", e);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error accessing the camera:\", error);\n      }\n    };\n\n    getUserCamera();\n\n    // Cleanup function to stop the video stream when the component unmounts\n    return () => {\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach((track) => track.stop());\n        videoRef.current.srcObject = null;\n      }\n    };\n  }, []);\n\n  const takePicture = () => {\n    const width = 500; // Define width, height of the photo\n    const height = width / (16 / 9); // Aspect ratio of 16:9\n    const newCanvas = document.createElement(\"canvas\");\n    newCanvas.width = width;\n    newCanvas.height = height;\n    const ctx = newCanvas.getContext(\"2d\");\n    if (ctx && videoRef.current) {\n      ctx.drawImage(videoRef.current, 0, 0, width, height);\n      canvasRefs.current.push(newCanvas); // Store the canvas in the refs array\n    }\n    updateDisplay();\n  };\n\n  const updateDisplay = () => {\n    const container = document.getElementById(\"canvasContainer\");\n    container.innerHTML = \"\"; // Clear existing canvases displayed\n    canvasRefs.current.forEach((canvas) => {\n      container.appendChild(canvas); // Append each canvas to the container\n    });\n  };\n\n  return (\n    <div className={css.container}>\n      <video ref={videoRef} autoPlay muted playsInline></video> \n      <button onClick={takePicture}>Take Picture</button>\n      <div id=\"canvasContainer\"></div>\n    </div>\n  );\n};\n\nexport default PhotoSession;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}