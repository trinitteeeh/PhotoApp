{"ast":null,"code":"var _jsxFileName = \"/Users/trinity/Documents/Project/photobooth/frontend/src/pages/PhotoSession/PhotoSession.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport css from \"./PhotoSession.module.css\"; // Ensure that this path matches your CSS module\nimport Timer from \"../../components/Timer/Timer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PhotoSession = () => {\n  _s();\n  const [countDown, setCountDown] = useState(5);\n  useEffect(() => {\n    // Only set up the interval if the countdown is greater than 0\n    if (countDown === 0) return;\n    const intervalId = setInterval(() => {\n      setCountDown(countDown - 1);\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [countDown]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.container,\n    children: /*#__PURE__*/_jsxDEV(Timer, {\n      countDown: countDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(PhotoSession, \"BiriF+fDDykL6ALT8+GiOm1pqLY=\");\n_c = PhotoSession;\nexport default PhotoSession;\nvar _c;\n$RefreshReg$(_c, \"PhotoSession\");","map":{"version":3,"names":["React","useState","useEffect","css","Timer","jsxDEV","_jsxDEV","PhotoSession","_s","countDown","setCountDown","intervalId","setInterval","clearInterval","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/trinity/Documents/Project/photobooth/frontend/src/pages/PhotoSession/PhotoSession.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport css from \"./PhotoSession.module.css\"; // Ensure that this path matches your CSS module\nimport Timer from \"../../components/Timer/Timer\";\n\nconst PhotoSession = () => {\n  const [countDown, setCountDown] = useState(5);\n\n  useEffect(() => {\n    // Only set up the interval if the countdown is greater than 0\n    if (countDown === 0) return;\n\n    const intervalId = setInterval(() => {\n      setCountDown(countDown - 1);\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, [countDown]);\n\n  return (\n    <div className={css.container}>\n      <Timer countDown={countDown} />\n    </div>\n  );\n};\nexport default PhotoSession;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,2BAA2B,CAAC,CAAC;AAC7C,OAAOC,KAAK,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd;IACA,IAAIO,SAAS,KAAK,CAAC,EAAE;IAErB,MAAME,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnCF,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;IAC7B,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMI,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,CAACF,SAAS,CAAC,CAAC;EAEf,oBACEH,OAAA;IAAKQ,SAAS,EAAEX,GAAG,CAACY,SAAU;IAAAC,QAAA,eAC5BV,OAAA,CAACF,KAAK;MAACK,SAAS,EAAEA;IAAU;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEV,CAAC;AAACZ,EAAA,CAnBID,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAoBlB,eAAeA,YAAY;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}