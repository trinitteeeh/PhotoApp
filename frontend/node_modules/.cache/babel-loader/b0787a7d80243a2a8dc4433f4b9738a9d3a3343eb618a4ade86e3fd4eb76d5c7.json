{"ast":null,"code":"var _jsxFileName = \"/Users/trinity/Documents/Project/photobooth/frontend/src/pages/PhotoSession/PhotoSession.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport css from \"./PhotoSession.module.css\"; // Ensure that this path matches your CSS module\nimport Timer from \"../../components/Timer/Timer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PhotoSession = () => {\n  _s();\n  const [countDown, setCountDown] = useState(5);\n  const videoRef = useRef(null);\n  const canvasRefs = useRef([]);\n  useEffect(() => {\n    if (countDown === 0) return;\n    const intervalId = setInterval(() => {\n      setCountDown(prevCountDown => prevCountDown - 1);\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [countDown]);\n  useEffect(() => {\n    getUserCamera();\n    return () => {\n      if (videoRef.current) {\n        videoRef.current.pause();\n        videoRef.current.srcObject = null;\n      }\n    };\n  }, []);\n  const getUserCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      if (videoRef.current) {\n        videoRef.current.pause();\n        videoRef.current.srcObject = null; // Reset the source or set to new source\n        // Set new source here if necessary\n        videoRef.current.load(); // Reload the new source to reset the state\n        videoRef.current.play().catch(e => console.error(\"Error playing the video:\", e));\n      }\n    } catch (error) {\n      console.error(\"Error accessing the camera:\", error);\n    }\n  };\n  const takePicture = () => {\n    const width = 500; // Define width, height of the photo\n    const height = width / (16 / 9); // Aspect ratio of 16:9\n\n    // Creating a new canvas element dynamically\n    const newCanvas = document.createElement(\"canvas\");\n    newCanvas.width = width;\n    newCanvas.height = height;\n    const ctx = newCanvas.getContext(\"2d\");\n    if (ctx && videoRef.current) {\n      ctx.drawImage(videoRef.current, 0, 0, width, height);\n      canvasRefs.current.push(newCanvas); // Store the canvas in the refs array\n    }\n    updateDisplay();\n  };\n  const updateDisplay = () => {\n    const container = document.getElementById(\"canvasContainer\");\n    container.innerHTML = \"\"; // Clear existing canvases displayed\n    canvasRefs.current.forEach(canvas => {\n      container.appendChild(canvas); // Append each canvas to the container\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.container,\n    children: [/*#__PURE__*/_jsxDEV(Timer, {\n      countDown: countDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: takePicture,\n      children: \"Take Picture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"canvasContainer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(PhotoSession, \"hIkYEeupmlha2N+9B3aDbTxZ0ns=\");\n_c = PhotoSession;\nexport default PhotoSession;\nvar _c;\n$RefreshReg$(_c, \"PhotoSession\");","map":{"version":3,"names":["React","useState","useEffect","useRef","css","Timer","jsxDEV","_jsxDEV","PhotoSession","_s","countDown","setCountDown","videoRef","canvasRefs","intervalId","setInterval","prevCountDown","clearInterval","getUserCamera","current","pause","srcObject","stream","navigator","mediaDevices","getUserMedia","video","load","play","catch","e","console","error","takePicture","width","height","newCanvas","document","createElement","ctx","getContext","drawImage","push","updateDisplay","container","getElementById","innerHTML","forEach","canvas","appendChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","id","_c","$RefreshReg$"],"sources":["/Users/trinity/Documents/Project/photobooth/frontend/src/pages/PhotoSession/PhotoSession.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport css from \"./PhotoSession.module.css\"; // Ensure that this path matches your CSS module\nimport Timer from \"../../components/Timer/Timer\";\n\nconst PhotoSession = () => {\n  const [countDown, setCountDown] = useState(5);\n  const videoRef = useRef(null);\n  const canvasRefs = useRef([]);\n\n  useEffect(() => {\n    if (countDown === 0) return;\n    const intervalId = setInterval(() => {\n      setCountDown((prevCountDown) => prevCountDown - 1);\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [countDown]);\n  useEffect(() => {\n    getUserCamera();\n    return () => {\n      if (videoRef.current) {\n        videoRef.current.pause();\n        videoRef.current.srcObject = null;\n      }\n    };\n  }, []);\n\n  const getUserCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n      if (videoRef.current) {\n        videoRef.current.pause();\n        videoRef.current.srcObject = null; // Reset the source or set to new source\n        // Set new source here if necessary\n        videoRef.current.load(); // Reload the new source to reset the state\n        videoRef.current.play().catch((e) => console.error(\"Error playing the video:\", e));\n      }\n    } catch (error) {\n      console.error(\"Error accessing the camera:\", error);\n    }\n  };\n\n  const takePicture = () => {\n    const width = 500; // Define width, height of the photo\n    const height = width / (16 / 9); // Aspect ratio of 16:9\n\n    // Creating a new canvas element dynamically\n    const newCanvas = document.createElement(\"canvas\");\n    newCanvas.width = width;\n    newCanvas.height = height;\n    const ctx = newCanvas.getContext(\"2d\");\n    if (ctx && videoRef.current) {\n      ctx.drawImage(videoRef.current, 0, 0, width, height);\n      canvasRefs.current.push(newCanvas); // Store the canvas in the refs array\n    }\n    updateDisplay();\n  };\n\n  const updateDisplay = () => {\n    const container = document.getElementById(\"canvasContainer\");\n    container.innerHTML = \"\"; // Clear existing canvases displayed\n    canvasRefs.current.forEach((canvas) => {\n      container.appendChild(canvas); // Append each canvas to the container\n    });\n  };\n\n  return (\n    <div className={css.container}>\n      <Timer countDown={countDown} />\n      <video ref={videoRef}></video>\n      <button onClick={takePicture}>Take Picture</button>\n      <div id=\"canvasContainer\"></div>\n    </div>\n  );\n};\n\nexport default PhotoSession;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}