{"ast":null,"code":"var _jsxFileName = \"/Users/trinity/Documents/Project/photobooth/frontend/src/pages/SelectFrame/SelectFrame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport css from \"./SelectFrame.module.css\";\nimport Frame from \"../../components/Frame/Frame\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectFrame = () => {\n  _s();\n  const colorArray = [\"pink\", \"blue\", \"green\", \"yellow\"];\n  const [selectedColor, setSelectedColor] = useState(\"\");\n  const handleSelectColor = color => {\n    setSelectedColor(color); // Update the selected color\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.frameContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/select_frame/frame_bg.svg\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.imgPlaceholder,\n        style: {\n          backgroundColor: selectedColor || \"#f0f0f0\",\n          // Default to light grey when no color is selected\n          backgroundImage: selectedColor ? \"none\" : `url('${process.env.PUBLIC_URL}/images/select_frame/empty_frame.svg')`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.frameLogo,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/select_frame/select_frame.svg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.rightContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.top,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Frames\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.bottom,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.frameWrapper,\n          children: colorArray.map((color, index) => /*#__PURE__*/_jsxDEV(Frame, {\n            bgColor: color,\n            onSelectColor: () => handleSelectColor(color)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectFrame, \"4PhcQ0Jp9pzSgb6fvr9XYX7KDvg=\");\n_c = SelectFrame;\nexport default SelectFrame;\nvar _c;\n$RefreshReg$(_c, \"SelectFrame\");","map":{"version":3,"names":["React","useState","css","Frame","jsxDEV","_jsxDEV","SelectFrame","_s","colorArray","selectedColor","setSelectedColor","handleSelectColor","color","className","container","children","frameContainer","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","imgPlaceholder","style","backgroundColor","backgroundImage","process","env","PUBLIC_URL","frameLogo","rightContainer","top","bottom","frameWrapper","map","index","bgColor","onSelectColor","_c","$RefreshReg$"],"sources":["/Users/trinity/Documents/Project/photobooth/frontend/src/pages/SelectFrame/SelectFrame.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport css from \"./SelectFrame.module.css\";\nimport Frame from \"../../components/Frame/Frame\";\n\nconst SelectFrame = () => {\n  const colorArray = [\"pink\", \"blue\", \"green\", \"yellow\"];\n\n  const [selectedColor, setSelectedColor] = useState(\"\");\n\n  const handleSelectColor = (color) => {\n    setSelectedColor(color); // Update the selected color\n  };\n  return (\n    <div className={css.container}>\n      <div className={css.frameContainer}>\n        <img src=\"/images/select_frame/frame_bg.svg\" alt=\"\" />\n        <div\n          className={css.imgPlaceholder}\n          style={{\n            backgroundColor: selectedColor || \"#f0f0f0\", // Default to light grey when no color is selected\n            backgroundImage: selectedColor ? \"none\" : `url('${process.env.PUBLIC_URL}/images/select_frame/empty_frame.svg')`,\n          }}\n        ></div>\n        <div className={css.frameLogo}>\n          <img src=\"/images/select_frame/select_frame.svg\" alt=\"\" />\n        </div>\n      </div>\n      <div className={css.rightContainer}>\n        <div className={css.top}>\n          <h2>Frames</h2>\n        </div>\n        <div className={css.bottom}>\n          <div className={css.frameWrapper}>\n            {colorArray.map((color, index) => (\n              <Frame key={index} bgColor={color} onSelectColor={() => handleSelectColor(color)} />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SelectFrame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}